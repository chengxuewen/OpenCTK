#include <octk_video_codes_error.hpp>

OCTK_BEGIN_NAMESPACE

const char *WebRtcVideoCodecErrorToString(int32_t error_code)
{
    switch (error_code)
    {
        case WEBRTC_VIDEO_CODEC_TARGET_BITRATE_OVERSHOOT:return "WEBRTC_VIDEO_CODEC_TARGET_BITRATE_OVERSHOOT";
        case WEBRTC_VIDEO_CODEC_OK_REQUEST_KEYFRAME:return "WEBRTC_VIDEO_CODEC_OK_REQUEST_KEYFRAME";
        case WEBRTC_VIDEO_CODEC_NO_OUTPUT:return "WEBRTC_VIDEO_CODEC_NO_OUTPUT";
        case WEBRTC_VIDEO_CODEC_ERROR:return "WEBRTC_VIDEO_CODEC_ERROR";
        case WEBRTC_VIDEO_CODEC_MEMORY:return "WEBRTC_VIDEO_CODEC_MEMORY";
        case WEBRTC_VIDEO_CODEC_ERR_PARAMETER:return "WEBRTC_VIDEO_CODEC_ERR_PARAMETER";
        case WEBRTC_VIDEO_CODEC_TIMEOUT:return "WEBRTC_VIDEO_CODEC_TIMEOUT";
        case WEBRTC_VIDEO_CODEC_UNINITIALIZED:return "WEBRTC_VIDEO_CODEC_UNINITIALIZED";
        case WEBRTC_VIDEO_CODEC_FALLBACK_SOFTWARE:return "WEBRTC_VIDEO_CODEC_FALLBACK_SOFTWARE";
        case WEBRTC_VIDEO_CODEC_ERR_SIMULCAST_PARAMETERS_NOT_SUPPORTED:return "WEBRTC_VIDEO_CODEC_ERR_SIMULCAST_PARAMETERS_NOT_SUPPORTED";
        case WEBRTC_VIDEO_CODEC_ENCODER_FAILURE:return "WEBRTC_VIDEO_CODEC_ENCODER_FAILURE";
        default:return "WEBRTC_VIDEO_CODEC_UNKNOWN";
    }
}

OCTK_END_NAMESPACE
