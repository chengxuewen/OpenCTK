# The project name, which will be used as the title of the first page of the generated program document
PROJECT_NAME = "@OCTK_PROJECT_NAME@"

# Document version number, which can correspond to the project version number, such as the project version number generated by svn, cvs
PROJECT_NUMBER = "@OCTK_VERSION_NAME@"
PROJECT_BRIEF = "@OCTK_BRIEF@"

# Program documentation output directory
OUTPUT_DIRECTORY = doc

# Program file input directory
INPUT = @OCTK_DOXYGEN_INPUT_DIRS@ @PROJECT_SOURCE_DIR@/README_en.md @PROJECT_SOURCE_DIR@/README.md

# Program mainpage input file
USE_MDFILE_AS_MAINPAGE = @PROJECT_SOURCE_DIR@/README_en.md

# Program documentation language environment
OUTPUT_LANGUAGE = English
DOXYFILE_ENCODING = UTF-8

# Program Ignore files
EXCLUDE_PATTERNS = *_p.h *_pch.h */examples */tests */include

# Generate program documentation only for the documented information in the header file
FILE_PATTERNS = *.h

# Recursively iterate through the subdirectories of the current directory to find the documented program source files
RECURSIVE = YES

# If you are creating a C program document, this option must be set to YES, otherwise the C++ document format is generated by default
OPTIMIZE_OUTPUT_FOR_C = YES

# Extracts information, including private data members and static members of the class
EXTRACT_ALL = yes
EXTRACT_PRIVATE = yes
EXTRACT_STATIC = yes

# For data types such as structures, enumerations, unions, etc., which are defined using typedef, only the type names defined by typedef are documented
TYPEDEF_HIDES_STRUCT = YES

# In the C++ program documentation, this value can be set to NO, while in the C program documentation,
# it is set to YES since there is no such concept as a domain/namespace in C.
HIDE_SCOPE_NAMES = YES

# Let doxygen generate the documentation for you quietly, and only output a message in the terminal when a warning or error occurs
QUIET = YES

# Recursively iterate through the subdirectories of the sample program directory to find the documented program source files
EXAMPLE_RECURSIVE = YES

# Allow program documentation to show the inter-call relationship of this documented function
REFERENCED_BY_RELATION = YES
REFERENCES_RELATION = YES
REFERENCES_LINK_SOURCE = YES

# Does not generate program files in latex format
GENERATE_LATEX = NO

# The program documentation allows to display function call relationships in the form of a legend, provided you have installed the graphviz package
HAVE_DOT = NO
CALL_GRAPH = NO
CALLER_GRAPH = NO

# Include all source code in the final generated document
SOURCE_BROWSER = YES

# This will add a sidebar to the HTML document and display the relationship of packages, classes, interfaces, etc. in a tree-like structure
GENERATE_HTML = YES
#GENERATE_TREEVIEW Ôºù YES
